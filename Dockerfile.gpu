# GPU-enabled Python execution container
# Base: NVIDIA CUDA 12.4 with Ubuntu 22.04
FROM nvidia/cuda:12.4.0-runtime-ubuntu22.04

# Set working directory
WORKDIR /app

# Install Python 3.11 and minimal dependencies
RUN apt-get update && apt-get install -y \
    python3.11 \
    python3.11-dev \
    python3-pip \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create symbolic links for python commands
RUN ln -sf /usr/bin/python3.11 /usr/bin/python && \
    ln -sf /usr/bin/python3.11 /usr/bin/python3

# Upgrade pip
RUN python -m pip install --no-cache-dir --upgrade pip

# Install CPU libraries first (lighter, commonly used)
RUN pip install --no-cache-dir \
    numpy==1.24.3 \
    pandas==2.0.3 \
    matplotlib==3.7.2 \
    requests==2.31.0 \
    beautifulsoup4==4.12.2 \
    seaborn==0.12.2 \
    pillow==10.0.0 \
    scipy==1.11.1 \
    scikit-learn==1.3.0

# Install GPU-accelerated libraries
# PyTorch with CUDA 12.4 support
RUN pip install --no-cache-dir \
    torch==2.5.1 \
    torchvision==0.20.1 \
    torchaudio==2.5.1 \
    --index-url https://download.pytorch.org/whl/cu124

# Install TensorFlow with GPU support
RUN pip install --no-cache-dir \
    tensorflow[and-cuda]==2.18.0

# Install additional GPU libraries
RUN pip install --no-cache-dir \
    cupy-cuda12x==13.3.0 \
    numba==0.60.0

# Create execution directories with proper permissions
RUN mkdir -p /app/code /tmp/plots /tmp/matplotlib && \
    chmod 777 /tmp/plots /tmp/matplotlib

# Create a non-root user for security
RUN useradd -m -u 1000 coderunner && \
    chown -R coderunner:coderunner /app

USER coderunner

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    MPLBACKEND=Agg \
    MPLCONFIGDIR=/tmp/matplotlib \
    CUDA_VISIBLE_DEVICES=0 \
    NVIDIA_VISIBLE_DEVICES=all \
    NVIDIA_DRIVER_CAPABILITIES=compute,utility

# Keep container alive for pool usage
CMD ["tail", "-f", "/dev/null"]
