{
  "permissions": {
    "allow": [
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main\\src\\app/**)",
      "Bash(dir:*)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main\\src/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main\\src\\app/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main\\src/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main\\src\\app/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main\\src/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main\\src\\ai/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main\\src\\app\\api\\run/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main\\src\\components/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main\\src\\components/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main\\src\\app\\compiler/**)",
      "Bash(tree:*)",
      "Bash(find:*)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main\\src/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main\\src/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main\\src/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main\\src/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main\\src/**)",
      "Read(/C:\\Users\\TRG-LOF-131-048\\Documents\\Code_Runner-main/**)",
      "Bash(npm run dev:*)",
      "Bash(npx next dev:*)",
      "Bash(npm run build:*)",
      "Bash(npm run typecheck:*)",
      "Bash(curl:*)",
      "Bash(npm install:*)",
      "Bash(docker build:*)",
      "Bash(docker run:*)",
      "Bash(del temp_test.py)",
      "Bash(docker inspect:*)",
      "Bash(del test_request.json)",
      "Bash(del test_plot.py)",
      "Bash(del debug_plot.py)",
      "Bash(pkill:*)",
      "Bash(taskkill:*)",
      "Bash(node:*)",
      "Bash(del test_api.js test_submit.json)",
      "Bash(next dev:*)",
      "Bash(mongo:*)",
      "Bash(tasklist:*)",
      "Bash(npm uninstall:*)",
      "Bash(rd:*)",
      "Bash(copy:*)",
      "Bash(xcopy:*)",
      "Bash(npx kill-port:*)",
      "WebFetch(domain:robertsspaceindustries.com)",
      "Bash(del:*)",
      "WebFetch(domain:leap-for-mankind.com)",
      "Bash(PORT=3000 npm run dev)",
      "Bash(findstr:*)",
      "Bash(nvidia-smi:*)",
      "Bash(docker --version:*)",
      "Bash(./setup-docker-gpu.bat)",
      "Bash(timeout /t 2)",
      "Bash(redis-cli ping:*)",
      "Bash(where:*)",
      "Bash(npm run seed:problem1:*)",
      "Bash(npm run seed:problem2:*)",
      "Bash(python -m json.tool:*)",
      "Bash(npm run seed:problem3:*)",
      "Bash(npm run seed:problem4:*)",
      "Bash(npm run seed:problem5:*)",
      "Bash(npm run seed:problem6:*)",
      "Bash(npm run seed:problem7:*)",
      "Bash(npm run seed:problem8:*)",
      "Bash(npm run seed:problem9:*)",
      "Bash(npm run seed:problem10:*)",
      "Bash(npm run seed:problem11:*)",
      "Bash(npm run seed:problem12:*)",
      "Bash(npm run seed:problem13:*)",
      "Bash(npm run seed:problem14:*)",
      "Bash(npm run seed:problem15:*)",
      "Bash(npm run seed:problem16:*)",
      "Bash(npx tsx:*)",
      "Bash(npm run seed:problem17:*)",
      "Bash(npm run seed:problem18:*)",
      "Bash(npm run seed:problem19:*)",
      "Bash(npm run seed:problem20:*)",
      "Bash(npm run seed:problem21:*)",
      "Bash(npm run seed:problem22:*)",
      "Bash(npm run seed:problem23:*)",
      "Bash(npm run seed:problem24:*)",
      "Bash(npm run seed:problem25:*)",
      "Bash(npm run seed:problem26:*)",
      "Bash(npm run seed:problem27:*)",
      "Bash(npm run seed:problem28:*)",
      "Bash(npm run seed:problem29:*)",
      "Bash(npm run seed:problem30:*)",
      "Bash(npm run seed:problem31:*)",
      "Bash(npm run seed:problem32:*)",
      "Bash(npm run seed:problem33:*)",
      "Bash(npm run seed:problem34:*)",
      "Bash(npm run seed:problem35:*)",
      "Bash(npm run seed:problem36:*)",
      "Bash(npm run seed:problem37:*)",
      "Bash(npm run seed:problem38:*)",
      "Bash(npm run seed:problem39:*)",
      "Bash(npm run seed:problem40:*)",
      "Bash(npm run seed:problem41:*)",
      "Bash(npm run seed:problem42:*)",
      "Bash(npm run seed:problem43:*)",
      "Bash(npm run seed:problem44:*)",
      "Bash(npm run seed:problem45:*)",
      "Bash(npm run seed:problem46:*)",
      "Bash(npm run seed:problem47:*)",
      "Bash(rm:*)",
      "Bash(powershell -ExecutionPolicy Bypass -File remove-session-intro.ps1:*)",
      "Bash(for i in {23..30})",
      "Bash(do npm run seed:problem$i)",
      "Bash(done)",
      "Bash(if [ -d \"images\" ])",
      "Bash(then ls images)",
      "Bash(else echo \"images folder does not exist\")",
      "Bash(fi)",
      "Bash(move:*)",
      "Bash(move \"if-else statement.png\" images/)",
      "Bash(move \"elif.png\" images/)",
      "Bash(move \"nested elif.png\" images/)",
      "Bash(move \"comparison operator.jpg\" images/)",
      "Bash(timeout /t 5)",
      "Bash(for file in seed-problem-6.ts seed-problem-7.ts seed-problem-8.ts seed-problem-9.ts seed-problem-10.ts)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(timeout /t 10)",
      "Bash(npx tsc:*)",
      "Bash(powershell -command \"Start-Sleep -Seconds 8\")",
      "Bash(docker exec:*)",
      "Bash(python:*)",
      "Bash(powershell -command \"Start-Sleep -Seconds 5\")",
      "Bash(netstat:*)"
    ],
    "deny": [],
    "ask": []
  }
}
